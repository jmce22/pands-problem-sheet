# This script generates and prints a histogram of a normal distribution of a 1000 values with a mean of 5 
# and standard deviation of 2

# References: 
# https://www.w3schools.com/python/numpy/numpy_random_normal.asp
# Lecture 8.2 for Programming and Scripting
# https://www.geeksforgeeks.org/style-plots-using-matplotlib/?ref=lbp
# https://www.educative.io/answers/what-is-the-matplotlibpyplotsavefig-function-in-python
# https://www.geeksforgeeks.org/matplotlib-pyplot-ylabel-in-python/



# These two commands import the NumPy and Matplotlib libraries respectively, which are needed to create the histogram.
import numpy as np
import matplotlib.pyplot as plt


# This imports the 'style' module, which enables the user to enhance the appearance of the plots they
# create, by imposing built-in or customised style packages onto them.
from matplotlib import style


# This imposes a specific built-in style package to the histogram. 
plt.style.use("seaborn-whitegrid")


# This seeds the (pseudo)random number generator with an initial value, so that each time the script is ran, 
# the same set of results are generated. This should be "commented out" if the user wishes the script to
# generate a different set of random values each time:
# np.random.seed(1)


# These ascribe the basic statistical properties of the data contained in the histogram.
mean = 5
st_dev = 2
num_values = 1000
values = np.random.normal(mean, st_dev, num_values)


# These print onto the histogram the title, x-axis label, y-axis label and the content, and position, of the legend for the plot
# (default position for the legend is top-left corner).
plt.title("week 8 - histogram")
plt.xlabel("value of x")
plt.ylabel("frequency of x")


# This generates the histogram, using the values generated by the random module above, passing in the values
# for the mean, standard deviation and number of values. It also specifies the number of bins in which the data is
# to be contained, and selects the colour of the histogram.
plt.hist(values, bins = 10, color = "green")


# This prints out the histogram.
plt.show()